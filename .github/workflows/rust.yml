name: release

on:
  push:
    branches: [main]

jobs:
  # this will:
  # create/update a CHANGELOG.md
  # update the version in Cargo.toml
  # tag the GH commit with a version
  release_please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        # id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: rust
          draft: true

  build:
    name: build-release
    needs: release_please
    if: ${{ needs.release_please.outputs.release_created == 'true' }}
    runs-on: ${{ matrix.gh_runner_os }}
    strategy:
      # if one build fails, continue building the others
      fail-fast: false
      matrix:
        include:
        - target: x86_64-unknown-linux-gnu
          gh_runner_os: ubuntu-latest
          builder: cargo
        - target: aarch64-unknown-linux-gnu
          gh_runner_os: ubuntu-latest
          builder: cross
        - target: x86_64-apple-darwin
          gh_runner_os: macos-latest
          builder: cargo
        - target: aarch64-apple-darwin
          gh_runner_os: macos-latest
          builder: cargo
        - target: x86_64-pc-windows-msvc
          gh_runner_os: windows-latest
          builder: cargo

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        target: ${{ matrix.target }}

    - name: Install Cross
      if: matrix.builder == 'cross'
      run: cargo install cross

    - name: Build ${{ matrix.target }}
      run: ${{ matrix.builder }} build --verbose --release --target ${{ matrix.target }}

    - name: Rename Executable | Nix
      if: contains(matrix.target, 'linux') || contains(matrix.target, 'darwin')
      run: |
        mkdir ./build
        cp target/${{ matrix.target }}/release/${{ github.event.repository.name }} ./build/${{ github.event.repository.name }}-${{ matrix.target}}

    - name: Rename build file | Win
      if: contains(matrix.target, 'windows')
      run: |
        mkdir ./build
        cp target/${{ matrix.target }}/release/${{ github.event.repository.name }}.exe ./build/${{ github.event.repository.name }}-${{ matrix.target}}.exe

    - name: Upload build
      uses: actions/upload-artifact@v3
      with:
          name: ${{ github.event.repository.name }}-${{ matrix.target}}
          path: ./build/${{ github.event.repository.name }}*

  upload_artifacts:
    name: Add Build Artifacts to Release
    needs: [release_please, build]
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Artifacts
        uses: actions/download-artifact@v3

      - name: Setup | Publish Release
        # run: gh release edit ${{ needs.release_please.outputs.tag_name }} --draft=false --repo=${{ github.repository }}
        run: gh release edit ${{ needs.release_please.outputs.tag_name }} --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build | Add Artifacts to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ github.event.repository.name }}*/${{ github.event.repository.name }}*
          tag_name: ${{ needs.release_please.outputs.tag_name }}
